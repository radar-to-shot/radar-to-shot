name: Run Robot Warriors Battles

on:
  push:
    branches: ["battle/**"]
    paths:
      - "robots/**"
      - "scripts/get_battles.py"
      - "scripts/render_battle_script.py"
      - "scripts/build_disk.py"
      - "images/Mac_IIci.ROM"
      - "images/Robot Warriors CI.dsk"
      - ".github/workflows/run-battle.yml"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps
        run: pip install --disable-pip-version-check --no-cache-dir machfs Jinja2

      - name: Build .dsk (CI template + battle script)
        run: |
          mkdir -p build
          python scripts/get_battles.py \
            --robots-dir robots \
            --num-battles 10 \
            --out build/battles.json
          python scripts/render_battle_script.py \
            --battles-json build/battles.json \
            --template scripts/templates/battles_quick.template \
            --out build/battle_script.txt
          python scripts/build_disk.py \
            --template "images/Robot Warriors CI.dsk" \
            --robots-dir robots \
            --battle-script build/battle_script.txt \
            --out build/robot.dsk
          ls -lh build

      - name: Install BasiliskII + Xvfb
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb basilisk2

      - name: Run battle using headless Basilisk II
        working-directory: build
        timeout-minutes: 20
        run: |
          ROM="${GITHUB_WORKSPACE}/images/Mac_IIci.ROM"
          IMG="${PWD}/robot.dsk"

          if timeout 15m xvfb-run -a BasiliskII \
              --cpu 3 \
              --fpu true \
              --nogui true \
              --nosound true \
              --nocdrom true \
              --disk "${IMG}" \
              --rom "${ROM}"
          then
            echo "BasiliskII exited normally."
          else
            status=$?
            if [ "$status" -eq 124 ]; then
              echo "BasiliskII timed out"
              pkill -f BasiliskII || true
            else
              echo "BasiliskII exited with status ${status}"
              exit "${status}"
            fi
          fi

      - name: Extract battle results images
        shell: python
        run: |
          import os, sys, re
          from machfs import Volume

          img_path = os.path.join("build", "robot.dsk")
          out_dir = os.path.join("build", "results")

          v = Volume()
          with open(img_path, "rb") as f:
            v.read(f.read())

          pattern = re.compile(r"^Battle Results.*\.png$", re.IGNORECASE)
          os.makedirs(out_dir, exist_ok=True)

          for name in list(v.keys()):
            try:
              obj = v[name]
            except KeyError:
              continue

            if hasattr(obj, "keys"):
              continue

            if pattern.match(name):
              out_path = os.path.join(out_dir, name)
              with open(out_path, "wb") as out:
                out.write(getattr(obj, "data", b""))
              print(f"Extracted: {out_path}")

      - name: Upload disk image artifact
        uses: actions/upload-artifact@v4
        with:
          name: robot-dsk-${{ github.sha }}
          path: build/robot.dsk
          if-no-files-found: error
          retention-days: 14

      - name: Upload battle results image
        uses: actions/upload-artifact@v4
        with:
          name: battle-results-${{ github.sha }}
          path: build/results/**
          if-no-files-found: error
          retention-days: 14

      - name: Summary
        shell: bash
        run: |
          cat >> "$GITHUB_STEP_SUMMARY" <<'MARKDOWN'
          ### Battle run complete

          **Artifacts**
          - Disk image: **robot-dsk-${{ github.sha }}**
          - Results images: **battle-results-${{ github.sha }}**
          MARKDOWN

